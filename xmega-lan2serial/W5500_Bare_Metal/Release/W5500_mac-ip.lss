
W5500_mac-ip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  000001c0  00000234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000234  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000900  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000997  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000009c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000078  00000000  00000000  000009e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000014  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000006e  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
   6:	00 00       	nop
   8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
   a:	00 00       	nop
   c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
   e:	00 00       	nop
  10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
  12:	00 00       	nop
  14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
  16:	00 00       	nop
  18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
  1e:	00 00       	nop
  20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
  22:	00 00       	nop
  24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
  26:	00 00       	nop
  28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
  2e:	00 00       	nop
  30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
  32:	00 00       	nop
  34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
  36:	00 00       	nop
  38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
  3e:	00 00       	nop
  40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
  42:	00 00       	nop
  44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
  46:	00 00       	nop
  48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	37 c0       	rjmp	.+110    	; 0xbc <__bad_interrupt>
  4e:	00 00       	nop
  50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
  52:	00 00       	nop
  54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
  56:	00 00       	nop
  58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
  5e:	00 00       	nop
  60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
  62:	00 00       	nop
  64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
  66:	00 00       	nop
  68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
  6e:	00 00       	nop
  70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
  72:	00 00       	nop
  74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
  76:	00 00       	nop
  78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
  7e:	00 00       	nop
  80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
  82:	00 00       	nop
  84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
  86:	00 00       	nop
  88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__bad_interrupt>
  8e:	00 00       	nop
  90:	15 c0       	rjmp	.+42     	; 0xbc <__bad_interrupt>
  92:	00 00       	nop
  94:	13 c0       	rjmp	.+38     	; 0xbc <__bad_interrupt>
  96:	00 00       	nop
  98:	11 c0       	rjmp	.+34     	; 0xbc <__bad_interrupt>
  9a:	00 00       	nop
  9c:	0f c0       	rjmp	.+30     	; 0xbc <__bad_interrupt>
  9e:	00 00       	nop
  a0:	0d c0       	rjmp	.+26     	; 0xbc <__bad_interrupt>
  a2:	00 00       	nop
  a4:	0b c0       	rjmp	.+22     	; 0xbc <__bad_interrupt>
  a6:	00 00       	nop
  a8:	09 c0       	rjmp	.+18     	; 0xbc <__bad_interrupt>
	...

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	d3 e2       	ldi	r29, 0x23	; 35
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	36 d0       	rcall	.+108    	; 0x126 <main>
  ba:	80 c0       	rjmp	.+256    	; 0x1bc <_exit>

000000bc <__bad_interrupt>:
  bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <__portable_avr_delay_cycles>:
  be:	61 50       	subi	r22, 0x01	; 1
  c0:	71 09       	sbc	r23, r1
  c2:	81 09       	sbc	r24, r1
  c4:	91 09       	sbc	r25, r1
  c6:	d9 f7       	brne	.-10     	; 0xbe <__portable_avr_delay_cycles>
  c8:	08 95       	ret

000000ca <toggle_clk>:
  ca:	1f 93       	push	r17
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	c0 e4       	ldi	r28, 0x40	; 64
  d2:	d6 e0       	ldi	r29, 0x06	; 6
  d4:	10 e2       	ldi	r17, 0x20	; 32
  d6:	1d 83       	std	Y+5, r17	; 0x05
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	cb 01       	movw	r24, r22
  de:	ef df       	rcall	.-34     	; 0xbe <__portable_avr_delay_cycles>
  e0:	1e 83       	std	Y+6, r17	; 0x06
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	cb 01       	movw	r24, r22
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	1f 91       	pop	r17
  ee:	e7 cf       	rjmp	.-50     	; 0xbe <__portable_avr_delay_cycles>

000000f0 <sende_befehl>:
  f0:	1f 93       	push	r17
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	80 e1       	ldi	r24, 0x10	; 16
  f8:	80 93 46 06 	sts	0x0646, r24
  fc:	d9 2f       	mov	r29, r25
  fe:	c8 e0       	ldi	r28, 0x08	; 8
 100:	10 e8       	ldi	r17, 0x80	; 128
 102:	d7 ff       	sbrs	r29, 7
 104:	03 c0       	rjmp	.+6      	; 0x10c <sende_befehl+0x1c>
 106:	10 93 45 06 	sts	0x0645, r17
 10a:	02 c0       	rjmp	.+4      	; 0x110 <sende_befehl+0x20>
 10c:	10 93 46 06 	sts	0x0646, r17
 110:	dc df       	rcall	.-72     	; 0xca <toggle_clk>
 112:	dd 0f       	add	r29, r29
 114:	c1 50       	subi	r28, 0x01	; 1
 116:	a9 f7       	brne	.-22     	; 0x102 <sende_befehl+0x12>
 118:	80 e1       	ldi	r24, 0x10	; 16
 11a:	80 93 45 06 	sts	0x0645, r24
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	08 95       	ret

00000126 <main>:
 126:	44 d0       	rcall	.+136    	; 0x1b0 <board_init>
 128:	80 e1       	ldi	r24, 0x10	; 16
 12a:	80 93 41 06 	sts	0x0641, r24
 12e:	80 e2       	ldi	r24, 0x20	; 32
 130:	80 93 41 06 	sts	0x0641, r24
 134:	80 e8       	ldi	r24, 0x80	; 128
 136:	80 93 41 06 	sts	0x0641, r24
 13a:	65 e1       	ldi	r22, 0x15	; 21
 13c:	76 e1       	ldi	r23, 0x16	; 22
 13e:	85 e0       	ldi	r24, 0x05	; 5
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	bd df       	rcall	.-134    	; 0xbe <__portable_avr_delay_cycles>
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	75 e0       	ldi	r23, 0x05	; 5
 148:	89 e0       	ldi	r24, 0x09	; 9
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	d1 df       	rcall	.-94     	; 0xf0 <sende_befehl>
 14e:	68 e0       	ldi	r22, 0x08	; 8
 150:	75 e0       	ldi	r23, 0x05	; 5
 152:	8a e0       	ldi	r24, 0x0A	; 10
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	cc df       	rcall	.-104    	; 0xf0 <sende_befehl>
 158:	6c ed       	ldi	r22, 0xDC	; 220
 15a:	75 e0       	ldi	r23, 0x05	; 5
 15c:	8b e0       	ldi	r24, 0x0B	; 11
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	c7 df       	rcall	.-114    	; 0xf0 <sende_befehl>
 162:	61 e0       	ldi	r22, 0x01	; 1
 164:	75 e0       	ldi	r23, 0x05	; 5
 166:	8c e0       	ldi	r24, 0x0C	; 12
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	c2 df       	rcall	.-124    	; 0xf0 <sende_befehl>
 16c:	62 e0       	ldi	r22, 0x02	; 2
 16e:	75 e0       	ldi	r23, 0x05	; 5
 170:	8d e0       	ldi	r24, 0x0D	; 13
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	bd df       	rcall	.-134    	; 0xf0 <sende_befehl>
 176:	63 e0       	ldi	r22, 0x03	; 3
 178:	75 e0       	ldi	r23, 0x05	; 5
 17a:	8e e0       	ldi	r24, 0x0E	; 14
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	b8 df       	rcall	.-144    	; 0xf0 <sende_befehl>
 180:	6c ea       	ldi	r22, 0xAC	; 172
 182:	75 e0       	ldi	r23, 0x05	; 5
 184:	8f e0       	ldi	r24, 0x0F	; 15
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	b3 df       	rcall	.-154    	; 0xf0 <sende_befehl>
 18a:	60 e1       	ldi	r22, 0x10	; 16
 18c:	75 e0       	ldi	r23, 0x05	; 5
 18e:	80 e1       	ldi	r24, 0x10	; 16
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	ae df       	rcall	.-164    	; 0xf0 <sende_befehl>
 194:	6f e0       	ldi	r22, 0x0F	; 15
 196:	75 e0       	ldi	r23, 0x05	; 5
 198:	81 e1       	ldi	r24, 0x11	; 17
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	a9 df       	rcall	.-174    	; 0xf0 <sende_befehl>
 19e:	63 e6       	ldi	r22, 0x63	; 99
 1a0:	75 e0       	ldi	r23, 0x05	; 5
 1a2:	82 e1       	ldi	r24, 0x12	; 18
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	a4 df       	rcall	.-184    	; 0xf0 <sende_befehl>
 1a8:	80 e2       	ldi	r24, 0x20	; 32
 1aa:	80 93 06 06 	sts	0x0606, r24
 1ae:	fd cf       	rjmp	.-6      	; 0x1aa <main+0x84>

000001b0 <board_init>:
 1b0:	e0 e0       	ldi	r30, 0x00	; 0
 1b2:	f6 e0       	ldi	r31, 0x06	; 6
 1b4:	80 e2       	ldi	r24, 0x20	; 32
 1b6:	85 83       	std	Z+5, r24	; 0x05
 1b8:	81 83       	std	Z+1, r24	; 0x01
 1ba:	08 95       	ret

000001bc <_exit>:
 1bc:	f8 94       	cli

000001be <__stop_program>:
 1be:	ff cf       	rjmp	.-2      	; 0x1be <__stop_program>
